// Copyright 2017 The CRC32C Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file. See the AUTHORS file for names of contributors.

#ifndef CRC32C_CRC32C_CONFIG_H_
#define CRC32C_CRC32C_CONFIG_H_

#if !defined(CRC32C_BAZEL_BUILD)

// Define to 1 if building for a big-endian platform.
#cmakedefine01 BYTE_ORDER_BIG_ENDIAN

// Define to 1 if the compiler has the __builtin_prefetch intrinsic.
#cmakedefine01 HAVE_BUILTIN_PREFETCH

// Define to 1 if targeting X86 and the compiler has the _mm_prefetch intrinsic.
#cmakedefine01 HAVE_MM_PREFETCH

// Define to 1 if targeting X86 and the compiler has the _mm_crc32_u{8,32,64}
// intrinsics.
#cmakedefine01 HAVE_SSE42

// Define to 1 if targeting ARM and the compiler has the __crc32c{b,h,w,d} and
// the vmull_p64 intrinsics.
#cmakedefine01 HAVE_ARM64_CRC32C

// Define to 1 if the system libraries have the getauxval function in the
// <sys/auxv.h> header. Should be true on Linux and Android API level 20+.
#cmakedefine01 HAVE_STRONG_GETAUXVAL

// Define to 1 if the compiler supports defining getauxval as a weak symbol.
// Should be true for any compiler that supports __attribute__((weak)).
#cmakedefine01 HAVE_WEAK_GETAUXVAL

// Define to 1 if CRC32C tests have been built with Google Logging.
#cmakedefine01 CRC32C_TESTS_BUILT_WITH_GLOG

#else

#if (defined(__BYTE_ORDER__) && defined(__ORDER_LITTLE_ENDIAN__) && \
     __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__)
#define BYTE_ORDER_BIG_ENDIAN 0
#elif defined(__BYTE_ORDER__) && defined(__ORDER_BIG_ENDIAN__) && \
    __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
#define BYTE_ORDER_BIG_ENDIAN 1
#elif defined(_WIN32) || defined(__x86_64__) || defined(__aarch64__)
#define BYTE_ORDER_BIG_ENDIAN 0
#else
#error "endian detection failed for current compiler"
#endif // 

#ifdef __has_builtin
#  if __has_builtin(__builtin_prefetech)
#    define HAVE_BUILTIN_PREFETCH 1
#  endif
#elif defined(__GNUC__) && (__GNUC__ > 3 || __GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    define HAVE_BUILTIN_PREFETCH 1
#endif

#endif // CRC32C_WITH_BAZEL

#endif  // CRC32C_CRC32C_CONFIG_H_
